# SCsub

Import("env")
Import("env_modules")

env_hbnative = env_modules.Clone()

thirdparty_obj = []

thirdparty_sources = []

if env["platform"] in ["x11", "macos", "android"]:
    thirdparty_sources = ["process.cpp", "process_unix.cpp"]
elif env["platform"] == "windows":
    thirdparty_sources = ["process.cpp", "process_win.cpp"]

thirdparty_dir = "process/tiny_process_lib/"
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env.Prepend(CPPPATH=[thirdparty_dir])

env_tpl = env_modules.Clone()
env_tpl.Prepend(CPPDEFINES=["UNICODE"])
env_tpl.Prepend(CPPPATH=[thirdparty_dir])
env_tpl.disable_warnings()
env_tpl.add_source_files(thirdparty_obj, thirdparty_sources)
env.modules_sources += thirdparty_obj

module_obj = []


env_process = env_modules.Clone()
env_process.Prepend(CPPDEFINES=["UNICODE"])

env_process.add_source_files(module_obj, "*.cpp")  # Add all cpp files to the build
env_process.add_source_files(module_obj, "process/*.cpp")

env.modules_sources += module_obj

env.Depends(module_obj, thirdparty_obj)
